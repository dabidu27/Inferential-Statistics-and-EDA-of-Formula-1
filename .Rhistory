geom_area(data = subset(t_df, t >= tcrit1), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_area(data = subset(t_df, t <= tcrit2), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = c(tcrit2, tcrit1), linetype = "solid", color = "red")+
geom_vline(xintercept = tstat, linetype = "dashed", color = "darkgreen", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("t = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
annotate("text", x = tcrit1, y = 0.05, label = paste0("tcrit = ", round(tcrit1, 3)),
vjust = -1, color = "red")+
annotate("text", x = tcrit2, y = 0.05, label = paste0("tcrit = ", round(tcrit2, 3)),
vjust = -1, color = "red")+
labs(x = "t-values", y = "Density", main = "t-distribution with rejection areas")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit1), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_area(data = subset(t_df, t <= tcrit2), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = c(tcrit2, tcrit1), linetype = "solid", color = "red")+
geom_vline(xintercept = tstat, linetype = "dashed", color = "darkgreen", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("t = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
annotate("text", x = tcrit1, y = 0.05, label = paste0("tcrit = ", round(tcrit1, 3)),
vjust = -1, color = "red")+
annotate("text", x = tcrit2, y = 0.05, label = paste0("tcrit = ", round(tcrit2, 3)),
vjust = -1, color = "red")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit1), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_area(data = subset(t_df, t <= tcrit2), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = c(tcrit2, tcrit1), linetype = "solid", color = "red")+
geom_vline(xintercept = tstat, linetype = "dashed", color = "darkgreen", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("t = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
annotate("text", x = tcrit1, y = 0.05, label = paste0("tcrit = ", round(tcrit1, 3)),
vjust = -1, color = "red")+
annotate("text", x = tcrit2, y = 0.05, label = paste0("tcrit = ", round(tcrit2, 3)),
vjust = -1, color = "red")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
x0 <- 30
xbar = mean(dataset$`Driver Age`); xbar
stddev = sd(dataset$`Driver Age`); stddev
n = nrow(dataset); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = qt(1-0.05, df = n-1); tcrit
statistics <- data.frame(
Statistic = c("Average", "Standard Deviation", "Sample size", "T-statistic", "Tcrit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t_vals, y = t_dt))+
geom_line(color = "blue", size = 1)
ggplot(t_df, aes(x = t-values, y = Density))+
geom_line(color = "blue", size = 1)
ggplot(t_df, aes(x = t_values, y = Density))+
geom_line(color = "blue", size = 1)
ggplot(t_df, aes(x = "t_values", y = "Density"))+
geom_line(color = "blue", size = 1)
gplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), color = "red", alpha = 0.4)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), area_color = "red", alpha = 0.4)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), fill = "red", alpha = 0.4)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)))
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)), color = "red")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color "darkgreen", linetype = "dashed")
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed")
x0 <- 30
xbar = mean(dataset$`Driver Age`); xbar
stddev = sd(dataset$`Driver Age`); stddev
n = nrow(dataset); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = qt(1-0.05, df = n-1); tcrit
statistics <- data.frame(
Statistic = c("Average", "Standard Deviation", "Sample size", "T-statistic", "Tcrit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed")
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
t_vals = seq(-5, 5, length = 1000)
t_vals = seq(-5, 5, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed")
t_vals = seq(-5, 5, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed")+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen") +
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
t_vals = seq(-5, 5, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen") +
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
young_drivers_data = dataset[dataset$`Driver Age`<25, ]
x0 <- 10
xbar = mean(young_drivers_data$`Finishing position`); xbar
stddev = sd(young_drivers_data$`Finishing position`); stddev
n = nrow(young_drivers_data); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = -qt(1-0.05,  df = n-1); tcrit
statistics = data.frame(
Statistic = c("Average", "Standard deviation", "Sample size", "T statistic", "t crit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
young_drivers_data = dataset[dataset$`Driver Age`<25, ]
x0 <- 10
xbar = mean(young_drivers_data$`Finishing position`); xbar
stddev = sd(young_drivers_data$`Finishing position`); stddev
n = nrow(young_drivers_data); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = -qt(1-0.05,  df = n-1); tcrit
statistics = data.frame(
Statistic = c("Average", "Standard deviation", "Sample size", "T statistic", "t crit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 2)+
geom_area(data = subset(t_df, t <= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red") +
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 2)+
geom_area(data = subset(t_df, t <= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 3)),
vjust = -1, color = "red") +
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 3)),
vjust = -1, color = "darkgreen")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
#2. Estimating proportion of street circuits (it is to be noted that for this analysis we will only count unique races)
race_data <- dataset[, c("Race", "Street or permanent circuit")]
race_data <- race_data[!duplicated(race_data$Race), ]
race_data <- race_data[-18, ]
n <- nrow(race_data); n
Number_of_street_circuits = sum(race_data$`Street or permanent circuit` == "Street circuit"); Number_of_street_circuits
phat = Number_of_street_circuits/n; phat
sd = sqrt(phat*(1-phat)); sd
se = sd/sqrt(n); se
statistics <- data.frame(
Statistic = c("Sample size (n)",
"Number of street circuits",
"Sample proportion of street circuits (phat)",
"Standard deviation for proportions",
"Standard error (se)") ,
Value = c(n, Number_of_street_circuits, phat, sd, se)
)
print(statistics)
z_values = qnorm(1-alpha/2); z_values
ME = statistics$Value[statistics$Statistic == "Standard error (se)"] * z_values
CI <- data.frame(
Confidence_Level = confidence_levels,
Significance_Level = alpha,
z_value = z_values,
ME = ME,
Lower_Bound = phat - ME,
Upper_Bound = phat + ME
)
print(CI[, 1:4])
print(CI[, c(1, 5, 6)])
ci_index = 1
lower = CI$Lower_Bound[ci_index]
upper = CI$Upper_Bound[ci_index]
x <- barplot(statistics$Value[statistics$Statistic == "Sample proportion of street circuits (phat)"],
ylim = c(0, upper+0.1),
names.arg = "Street circuits proportion",
col = "lightblue")
arrows(x, lower, x, upper, angle = 90, code = 3, col = "red", lwd = 2)
ggplot(statistics)
race_data <- dataset[, c("Race", "Street or permanent circuit")]
race_data <- race_data[!duplicated(race_data$Race), ]
race_data <- race_data[-18, ]
n <- nrow(race_data); n
Number_of_street_circuits = sum(race_data$`Street or permanent circuit` == "Street circuit"); Number_of_street_circuits
phat = Number_of_street_circuits/n; phat
sd = sqrt(phat*(1-phat)); sd
se = sd/sqrt(n); se
statistics <- data.frame(
Statistic = c("Sample size (n)",
"Number of street circuits",
"Sample proportion of street circuits (phat)",
"Standard deviation for proportions",
"Standard error (se)") ,
Value = c(n, Number_of_street_circuits, phat, sd, se)
)
print(statistics)
z_values = qnorm(1-alpha/2); z_values
ME = statistics$Value[statistics$Statistic == "Standard error (se)"] * z_values
CI <- data.frame(
Confidence_Level = confidence_levels,
Significance_Level = alpha,
z_value = z_values,
ME = ME,
Lower_Bound = phat - ME,
Upper_Bound = phat + ME
)
print(CI[, 1:4])
print(CI[, c(1, 5, 6)])
ci_index = 1
lower = CI$Lower_Bound[ci_index]
upper = CI$Upper_Bound[ci_index]
ggplot(statistics)+
ggplot(CI)
ggplot(statistics)
ggplot(statistics)+
geom_bar(aes(x = Mean, y = Values))
geom_bar(aes(x = phat, y = n)
ggplot(statistics)+
ggplot(statistics)+
geom_bar(aes(x=phat, y=n))
young_drivers_data = dataset[dataset$`Driver Age`<25, ]
x0 <- 10
xbar = mean(young_drivers_data$`Finishing position`); xbar
stddev = sd(young_drivers_data$`Finishing position`); stddev
n = nrow(young_drivers_data); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = -qt(1-0.05,  df = n-1); tcrit
statistics = data.frame(
Statistic = c("Average", "Standard deviation", "Sample size", "T statistic", "t crit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 2)+
geom_area(data = subset(t_df, t <= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red") +
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
x0 <- 0
xbar = mean(dataset$`Position change`); xbar
stddev = sd(dataset$`Position change`); stddev
n = nrow(dataset); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit1 = qt(1-0.05/2, df = n-1); tcrit1
tcrit2 = -tcrit1; tcrit2
statistics <- data.frame(
Statistic = c("Average", "Standard Deviation", "Count(n)", "T-statistic", "Tcrit1", "Tcrit2"),
Values = c(xbar, stddev, n, tstat, tcrit1, tcrit2)
)
print(statistics)
install.packages("ggplot2")
library(ggplot2)
t_vals = seq(-4, 4, length = 1000)
t_dist = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dist)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit1), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_area(data = subset(t_df, t <= tcrit2), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = c(tcrit2, tcrit1), linetype = "solid", color = "red")+
geom_vline(xintercept = tstat, linetype = "dashed", color = "darkgreen", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
annotate("text", x = tcrit1, y = 0.05, label = paste0("tcrit = ", round(tcrit1, 3)),
vjust = -1, color = "red")+
annotate("text", x = tcrit2, y = 0.05, label = paste0("tcrit = ", round(tcrit2, 3)),
vjust = -1, color = "red")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
install.packages("ggplot2")
x0 <- 30
xbar = mean(dataset$`Driver Age`); xbar
stddev = sd(dataset$`Driver Age`); stddev
n = nrow(dataset); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = qt(1-0.05, df = n-1); tcrit
statistics <- data.frame(
Statistic = c("Average", "Standard Deviation", "Sample size", "T-statistic", "Tcrit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-5, 5, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 1)+
geom_area(data = subset(t_df, t >= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red")+
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen") +
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
young_drivers_data = dataset[dataset$`Driver Age`<25, ]
x0 <- 10
xbar = mean(young_drivers_data$`Finishing position`); xbar
stddev = sd(young_drivers_data$`Finishing position`); stddev
n = nrow(young_drivers_data); n
tstat = (xbar - x0) / (stddev/sqrt(n)); tstat
tcrit = -qt(1-0.05,  df = n-1); tcrit
statistics = data.frame(
Statistic = c("Average", "Standard deviation", "Sample size", "T statistic", "t crit"),
Values = c(xbar, stddev, n, tstat, tcrit)
)
print(statistics)
t_vals = seq(-4, 4, length = 1000)
t_dt = dt(t_vals, df = n-1)
t_df = data.frame(t = t_vals, density = t_dt)
ggplot(t_df, aes(x = t, y = density))+
geom_line(color = "blue", size = 2)+
geom_area(data = subset(t_df, t <= tcrit), aes(x = t, y = density), fill = "red", alpha = 0.4)+
geom_vline(xintercept = tcrit, color = "red", linetype = "solid")+
annotate("text", x = tcrit, y = 0.05, label = paste0("tcrit = ", round(tcrit, 2)),
vjust = -1, color = "red") +
geom_vline(xintercept = tstat, color = "darkgreen", linetype = "dashed", size = 1)+
annotate("text", x = tstat, y = 0.05, label = paste0("tstat = ", round(tstat, 2)),
vjust = -1, color = "darkgreen")+
labs(x = "t-values", y = "Density", title = "t-distribution with rejection areas")+
theme_minimal()
ggplot(dataset, aes(x = `Driver Age`, y = `Constructor Tier`, fill = `Constructor Tier`)) +
geom_boxplot()
plot(anova_results)
geom_boxplot()
ggplot(dataset, aes(x = `Driver Age`, y = `Constructor Tier`, fill = `Constructor Tier`)) +
geom_boxplot()
ggplot(dataset, aes(x = `Driver Age`, y = `Constructor Tier`, fill = `Constructor Tier`)) +
geom_boxplot()
ggplot(dataset, aes(x = `Driver Age`, y = `Constructor Tier`, fill = `Constructor Tier`)) +
geom_boxplot()+
labs(title = "Mean driver age by constructor tier")
ggplot(quali_df, aes(x =  `Qualifying position`, y = `Age category`, fill = `Age category`))+
geom_boxplot()+
labs(title = "Mean qualifying position by age category")
ggplot(dataset, aes(x = `Finshing position`, y = `Constructor Tier`, fil = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
ggplot(dataset, aes(x = `Finshing Position`, y = `Constructor Tier`, fil = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
anova_results = aov(`Finishing position` ~ `Constructor Tier`, data = dataset)
summary(anova_results)
ggplot(dataset, aes(x = `Finshing Position`, y = `Constructor Tier`, fil = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
anova_results = aov(`Finishing position` ~ `Constructor Tier`, data = dataset)
summary(anova_results)
ggplot(dataset, aes(x = `Finshing position`, y = `Constructor Tier`, fil = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
ggplot(dataset, aes(x = `Finshing position`, y = `Constructor Tier`, fill = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor Tier`, fill = `Constructor Tier`))+
geom_boxplot()+
labs(title = "Mean finishing position by constructor tier")
lm_model = lm(`Finishing position` ~ `Constructor's season finishing position`, data = dataset)
summary(lm_model)
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", color = "red")
lm_model = lm(`Finishing position` ~ `Constructor's season finishing position`, data = dataset)
summary(lm_model)
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", color = "red")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = TRUE, color = "red")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = TRUE, color = "red")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
labs(title = "Driver vs Constructor Finishing Position",
x = "Constructor's Season Finishing Position",
y = "Driver Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
labs(title = "Driver Race Finishing Position vs Constructor Finishing Position",
x = "Constructor's Season Finishing Position",
y = "Driver Race Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Driver Age`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
labs(title = "Driver Race Finishing Position vs Driver Age",
x = "Driver Age",
y = "Driver Race Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Constructor's season finishing position`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
labs(title = "Driver Race Finishing Position vs Constructor Finishing Position",
x = "Constructor's Season Finishing Position",
y = "Driver Race Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Driver Age`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
labs(title = "Driver Race Finishing Position vs Driver Age",
x = "Driver Age",
y = "Driver Race Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Permanent circuit`))+
geom_point()+
geom_smooth(color = "red", method = "lm", se = FALSE)+
labs(title = "Driver Race Finishing Position vs Permanent Circuit",
x = "Permanent Circuit",
y = "Driver Race Finishing Position")
ggplot(dataset, aes(x = `Finishing position`, y = `Quali position`))+
geom_point()+
geom_smooth(method = "lm", color = "red", se = FALSE)+
labs(title = "Driver Race Finishing Position vs Qualifying position",
x = "Qualifying position",
y = "Driver Race Finishing Position")
